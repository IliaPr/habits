version: '3.9'

services:
  redis:
    image: redis
    networks:
      - mynetwork

  app:
    build:
      context: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    extra_hosts:
      - "db:172.22.0.2"

  db:
    restart: always
    image: postgres
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    expose:
      - '5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

  celery:
    build: .
    restart: always
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app
    networks:
      - mynetwork

  celery_beat:
    build: .
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  pg_data:
